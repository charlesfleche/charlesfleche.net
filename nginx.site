##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {

	listen 443 ssl;
	listen [::]:443 ssl;

    access_log /var/log/nginx/blog.access.log;
    error_log /var/log/nginx/blog.error.log warn;

	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /srv/www/blog;
    error_page 404 /404.html;

	# Add index.php to the list if you are using PHP
	index index.html;

	server_name charlesfleche.net blog.charlesfleche.net www.charlesfleche.net;

	location / {
		try_files $uri $uri/ =404;
	}

    location /drafts/ {
        auth_basic "Restricted Content";
        auth_basic_user_file /srv/blog.htpasswd;
        try_files $uri $uri/ =404;
    }

    ssl_certificate /etc/letsencrypt/live/charlesfleche.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/charlesfleche.net/privkey.pem; # managed by Certbot


}


server {
    if ($host = charlesfleche.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



	server_name charlesfleche.net blog.charlesfleche.net www.charlesfleche.net;
    return 404; # managed by Certbot


}
server {
    if ($host = blog.charlesfleche.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



	server_name charlesfleche.net blog.charlesfleche.net www.charlesfleche.net;
    return 404; # managed by Certbot


}
server {
    if ($host = www.charlesfleche.net) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80 default_server;
	listen [::]:80 default_server;

	server_name charlesfleche.net blog.charlesfleche.net www.charlesfleche.net;
    return 404; # managed by Certbot


}
